AWSTemplateFormatVersion: 2010-09-09
Description: "A pipeline to deploy the equation solver code."


Parameters:
  S3ArtifactsStore:
    Description: "The S3 bucket used to store CodePipeline artifacts."
    Type: AWS::SSM::Parameter::Value<String>
    Default: /portfolio/CICD/s3-artifacts-bucket
  CloudWatchLogsGroupName:
    Type: String
    Default: EqnSolverImageBuilderLogs


Resources: 
  ImageBuilderRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: #"JSON" # Required
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal: 
              Service: codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Description: "The role assumed by AWS CodeBuild to perform its tasks."
      Policies: 
        - 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "s3:Get*"
                Resource:
                  - !Sub "arn:aws:s3:::${S3ArtifactsStore}/*"
                #Condition:
                #  StringEquals:
                #    "AWS::SourceAccount": !Ref AWS::AccountId
          PolicyName: "EqnSolverImageBuilderLimitedS3Access"
        -
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "s3:List*"
                Resource:
                  - !Sub "arn:aws:s3:::${S3ArtifactsStore}"
                #Condition:
                #  StringEquals:
                #    "AWS::SourceAccount": !Ref AWS::AccountId
          PolicyName: "EqnSolverImageBuilderLimitedS3Access2"
        -
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  #- "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudWatchLogsGroupName}:*"
          PolicyName: "CloudWatchFullAccess"
        -
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                Resource: "*"
          PolicyName: "CloudWatchFullAccess0"
        - 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "codebuild:CreateReportGroup"
                  - "codebuild:CreateReport"
                  - "codebuild:UpdateReport"
                  - "codebuild:BatchPutTestCases"
                  - "codebuild:BatchPutCodeCoverages"
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
          PolicyName: CodeBuildLimitedAccess
        - 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:PutImage"
                  - "ecr:UploadLayerPart"
                Resource: "*"
          PolicyName: "WriteToECR"
      RoleName: EqnSolverImageBuilderRole
      Tags:
        - Key: Project
          Value: EquationSolver
  
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: #"JSON" # Required
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal: 
              Service: "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Description: "The role assumed by AWS CodePipeline to perform its tasks."
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess"
      Policies: 
        - 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                Resource: 
                  - "*"
          PolicyName: "CodeStarConnection"
        - 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "s3:Put*"
                Resource:
                  - !Sub "arn:aws:s3:::${S3ArtifactsStore}/*"
                #Condition:
                #  StringEquals:
                #    "AWS::SourceAccount": !Ref AWS::AccountId
          PolicyName: "EqnSolverImageBuilderLimitedS3Access2"
        -
          PolicyName: "ControlCodeBuild"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuildBatches"
                  - "codebuild:StartBuildBatch"
                Resource: "*"
      RoleName: EqnSolverPipelineRole
      Tags:
        - Key: Project
          Value: EquationSolver

  EqnSolverImageBuilder:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      ConcurrentBuildLimit: 1
      Description: "Builds the eqn solver docker image"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: 
          - 
            Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          -
            Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          -
            Name: IMAGE_TAG
            Value: test-image
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref CloudWatchLogsGroupName
          Status: ENABLED
          StreamName: eqn-solver-builder
      Name: EquationSolverImageBuilderProject
      #ResourceAccessRole: "String"
      Source: 
        Type: CODEPIPELINE
      ServiceRole: !Ref ImageBuilderRole
      Visibility: PRIVATE

  # The connection has to be enabled in the AWS console. Otherwise the pipeline will never be triggered.
  EqnSolverPipelineGitHubConnection:
    Type: AWS::CodeConnections::Connection
    Properties:
      ConnectionName: eqn_solver_github_connection # Required
      ProviderType: GitHub
      Tags: 
        - Key: Project
          Value: EquationSolverDeploymentPipeline

  EqnSolverPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref S3ArtifactsStore
        Type: "S3"
      ExecutionMode: "QUEUED"
      Name: "EquationSolverDeploymentPipeline"
      PipelineType: "V2"
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt PipelineRole.Arn
      Stages: # Required
        - 
          Actions:
            - 
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !GetAtt EqnSolverPipelineGitHubConnection.ConnectionArn
                FullRepositoryId: "MogomotsiFM/equation_solver"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
              InputArtifacts: []
              Name: EquationSolverSourceAction
              Namespace: EquationSolverSource0
              OutputArtifacts:
                - Name: EqnSolverSourceCode
              Region: !Ref AWS::Region
            - 
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !GetAtt EqnSolverPipelineGitHubConnection.ConnectionArn
                FullRepositoryId: "MogomotsiFM/docker_equation_solver"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
              InputArtifacts: []
              Name: DockerizeEqnSolverSourceAction
              Namespace: EquationSolverSource1
              OutputArtifacts:
                - Name: SourceArtifact
              Region: !Ref AWS::Region
          Name: EquationSolverSource
        -
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref EqnSolverImageBuilder
              InputArtifacts:
                - Name: SourceArtifact
              Name: BuildEquationSolverDockerImage
              Namespace: EquationSolverBuilder
              OutputArtifacts:
                - Name: EquationSolverDockerImage
          Name: BuildEquationSolverImage
      Tags: 
        - Key: Project
          Value: EquationSolver
      Triggers: 
        - 
          GitConfiguration:
            Push:
              - 
                FilePaths:
                  Excludes:
                    - '**/README.md'
                    - '**/LICENSE'
            SourceActionName: EquationSolverSourceAction
          ProviderType: CodeStarSourceConnection
        - 
          GitConfiguration:
            Push:
              - 
                FilePaths:
                  Excludes:
                    - '**/README.md'
                    - '**/LICENSE'
            SourceActionName: DockerizeEqnSolverSourceAction
          ProviderType: CodeStarSourceConnection


