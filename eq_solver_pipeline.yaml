AWSTemplateFormatVersion: 2010-09-09
Description: "A pipeline to deploy the equation solver code."


Parameters:
  S3ArtifactsStore:
    Description: "The S3 bucket used to store CodePipeline artifacts."
    Type: AWS::SSM::Parameter::Value<String>
    Default: /portfolio/CICD/s3-artifacts-bucket
  CloudWatchLogsGroupName:
    Type: String
    Default: EqnSolverImageBuilderLogs
  ImageBuilderRoleURL:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /portfolio/CICD/image-builder-role
  PipelineRoleURL:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /portfolio/CICD/pipeline-role
  CodeDeployRoleURL:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /portfolio/CICD/codedeploy-role


Resources: 
  EqnSolverImageBuilderRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
         S3ArtifactsStore: !Ref S3ArtifactsStore
         CloudWatchLogsGroupName: !Ref CloudWatchLogsGroupName
      Tags: 
        - Key: Project
          Value: EquationSolverDeploymentPipeline
      TemplateURL: !Ref ImageBuilderRoleURL # Required
  
  EqnSolverPipelineRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
         S3ArtifactsStore: !Ref S3ArtifactsStore
      Tags: 
        - Key: Project
          Value: EquationSolverDeploymentPipeline
      TemplateURL: !Ref PipelineRoleURL # Required

  EqnSolverCodeDeployRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      Tags: 
        - Key: Project
          Value: EquationSolverDeploymentPipeline
      TemplateURL: !Ref CodeDeployRoleURL # Required

  EqnSolverImageBuilder:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: S3
        Location: !Sub "${S3ArtifactsStore}/codebuild-cache"
      ConcurrentBuildLimit: 1
      Description: "Builds the eqn solver docker image"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: 
          - 
            Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          -
            Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          -
            Name: IMAGE_TAG
            Value: test-image
          - 
            Name: LambdaFunctionName
            Value: linear-equation-solver-demo
          -
            Name: LambdaFunctionAlias
            Value: dev
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref CloudWatchLogsGroupName
          Status: ENABLED
          StreamName: eqn-solver-builder
      Name: EquationSolverImageBuilderProject
      #ResourceAccessRole: "String"
      SecondaryArtifacts:
        -
          ArtifactIdentifier: AppSpecFile
          Location: !Ref S3ArtifactsStore
          Name: "/"
          Path: TestReports
          Type: S3
      Source: 
        Type: CODEPIPELINE
      ServiceRole: !GetAtt EqnSolverImageBuilderRole.Outputs.EqnSolverImageBuilderRole
      Visibility: PRIVATE

  EqnSolverIntegrationTests:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: S3
        Location: !Sub "${S3ArtifactsStore}/codebuild-cache"
      ConcurrentBuildLimit: 1
      Description: "Builds the eqn solver docker image"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: 
          - 
            Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          -
            Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          -
            Name: IMAGE_TAG
            Value: test-image
          - 
            Name: LambdaFunctionName
            Value: linear-equation-solver-demo
          -
            Name: LambdaFunctionAlias
            Value: prod
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref CloudWatchLogsGroupName
          Status: ENABLED
          StreamName: eqn-solver-builder
      Name: EquationSolverIntegrationTestsProject
      Source: 
        Type: CODEPIPELINE
        BuildSpec: "integration_tests_buildspec.yaml"
      ServiceRole: !GetAtt EqnSolverImageBuilderRole.Outputs.EqnSolverImageBuilderRole
      Visibility: PRIVATE

  IntegrationTestsDeploymentApp:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: IntegrationTestsDeploymentStage
      ComputePlatform: Lambda
      
  IntegrationTestsDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref IntegrationTestsDeploymentApp # Required
      DeploymentConfigName: !Ref IntegrationTestsDeploymentConfig
      DeploymentGroupName: IntegrationTestsDeploymentGroup
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      ServiceRoleArn: !GetAtt EqnSolverCodeDeployRole.Outputs.EquationSolverCodeDeployRole
  
  IntegrationTestsDeploymentConfig:
    Type: AWS::CodeDeploy::DeploymentConfig
    Properties:
      ComputePlatform: Lambda
      DeploymentConfigName: IntegrationTestsDeploymentConfig
      TrafficRoutingConfig:
        Type: AllAtOnce

  ProductionResourcesDeploymentApp:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: ProductionResourcesDeploymentStage
      ComputePlatform: Lambda

  ProductionResourcesDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref ProductionResourcesDeploymentApp # Required
      DeploymentConfigName: !Ref ProductionResourcesDeploymentConfig
      DeploymentGroupName: ProductionResourcesDeploymentGroup
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      ServiceRoleArn: !GetAtt EqnSolverCodeDeployRole.Outputs.EquationSolverCodeDeployRole

  ProductionResourcesDeploymentConfig:
    Type: AWS::CodeDeploy::DeploymentConfig
    Properties:
      ComputePlatform: Lambda
      DeploymentConfigName: ProductionResourcesDeploymentConfig
      TrafficRoutingConfig:
        Type: TimeBasedCanary
        TimeBasedCanary:
          CanaryInterval: 10
          CanaryPercentage: 25

  # The connection has to be enabled in the AWS console. Otherwise the pipeline will never be triggered.
  EqnSolverPipelineGitHubConnection:
    Type: AWS::CodeConnections::Connection
    Properties:
      ConnectionName: eqn_solver_github_connection # Required
      ProviderType: GitHub
      Tags: 
        - Key: Project
          Value: EquationSolverDeploymentPipeline

  EqnSolverPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref S3ArtifactsStore
        Type: "S3"
      ExecutionMode: "SUPERSEDED"
      Name: "EquationSolverDeploymentPipeline"
      PipelineType: "V2"
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt EqnSolverPipelineRole.Outputs.EqnSolverPipelineRole
      Stages: # Required
        - 
          Actions:
            - 
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !GetAtt EqnSolverPipelineGitHubConnection.ConnectionArn
                FullRepositoryId: "MogomotsiFM/equation_solver"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
              InputArtifacts: []
              Name: EquationSolverSourceAction
              Namespace: EquationSolverSource0
              OutputArtifacts:
                - Name: EqnSolverSourceCode
              Region: !Ref AWS::Region
            - 
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !GetAtt EqnSolverPipelineGitHubConnection.ConnectionArn
                FullRepositoryId: "MogomotsiFM/docker_equation_solver"
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
              InputArtifacts: []
              Name: DockerizeEqnSolverSourceAction
              Namespace: EquationSolverSource1
              OutputArtifacts:
                - Name: SourceArtifact
              Region: !Ref AWS::Region
          Name: EquationSolverSource
        -
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref EqnSolverImageBuilder
              InputArtifacts:
                - Name: SourceArtifact
              Name: BuildEquationSolverDockerImage
              Namespace: EquationSolverBuilder
              OutputArtifacts:
                - Name: AppSpecFile
                - Name: TestReports
          Name: BuildEquationSolverImage
        - 
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: "1"
              Configuration:
                ApplicationName: !Ref IntegrationTestsDeploymentApp
                DeploymentGroupName: !Ref IntegrationTestsDeploymentGroup
              InputArtifacts:
                - Name: AppSpecFile
              Name: IntegrationTestsResourcesDeployment
              Namespace: IntegrationTestsPreparation
          Name: EquationSolverIntegrationTests
        -
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref EqnSolverIntegrationTests
                PrimarySource: SourceArtifact
              InputArtifacts:
                - Name: SourceArtifact
                - Name: EqnSolverSourceCode
              Name: EquationSolverIntegrationTestsAction
              Namespace: EquationSolverIntegrationTestsRunner
              OutputArtifacts:
                - Name: ProductionAppSpecFile
          Name: EquationSolverIntegrationTestsStage
        - 
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: "1"
              Configuration:
                ApplicationName: !Ref ProductionResourcesDeploymentApp
                DeploymentGroupName: !Ref ProductionResourcesDeploymentGroup
              InputArtifacts:
                - Name: ProductionAppSpecFile
              Name: ProductionResourcesDeploymentAction
              Namespace: ProductionPreparation
              # RoleArn: "String"
          Name: EquationSolverProdResourceDeploymentStage
      Tags: 
        - Key: Project
          Value: EquationSolver
      Triggers: 
        - 
          GitConfiguration:
            Push:
              - 
                FilePaths:
                  Excludes:
                    - '**/README.md'
                    - '**/LICENSE'
            SourceActionName: EquationSolverSourceAction
          ProviderType: CodeStarSourceConnection
        - 
          GitConfiguration:
            Push:
              - 
                FilePaths:
                  Excludes:
                    - '**/README.md'
                    - '**/LICENSE'
            SourceActionName: DockerizeEqnSolverSourceAction
          ProviderType: CodeStarSourceConnection


